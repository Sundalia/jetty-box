/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\public\models\TestFBX.glb -o .\src\components\Light.jsx -r public 
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";

export default function Light(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/TestFBX.glb");
  const { actions, mixer, names } = useAnimations(animations, group);

  useEffect(() => {

    const sourceClip = actions[names[1]].getClip();

    const trimmedWalkAnimation = THREE.AnimationUtils.subclip(
      sourceClip,
      "trimmedWalk",
      10,
      80
    );

    const trimmedAction = mixer.clipAction(trimmedWalkAnimation);
    trimmedAction.play();

    trimmedAction.fadeIn = true;
    trimmedAction.fadeInDuration = 0.5;

    trimmedAction.fadeOut = true;
    trimmedAction.fadeOutDuration = 0.5;
  }, [actions, mixer, names]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Empty001"
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <group
          name="Armature"
          position={[0, 11.747, -1.024]}
          scale={[0.195, 0.239, 0.195]}
        >
          <primitive object={nodes.Bone} />
          <skinnedMesh
            name="Cube001"
            geometry={nodes.Cube001.geometry}
            material={materials["Material.001"]}
            skeleton={nodes.Cube001.skeleton}
          />
          <skinnedMesh
            name="Cube002"
            geometry={nodes.Cube002.geometry}
            material={materials["Material.002"]}
            skeleton={nodes.Cube002.skeleton}
          />
        </group>
        <mesh
          visible={false}
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={materials.Material}
        />
        <mesh
          visible={false}
          name="Cube003"
          geometry={nodes.Cube003.geometry}
          material={materials["Material.003"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <mesh
          visible={false}
          name="Cube004"
          geometry={nodes.Cube004.geometry}
          material={materials["Material.003"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <mesh
          visible={false}
          name="Cube005"
          geometry={nodes.Cube005.geometry}
          material={materials["Material.003"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <mesh
          visible={false}
          name="Plane001"
          geometry={nodes.Plane001.geometry}
          material={materials["Material.004"]}
          position={[0, 11.507, -0.889]}
        />
        <mesh
          visible={false}
          name="Plane002"
          geometry={nodes.Plane002.geometry}
          material={materials["Material.005"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <mesh
          visible={false}
          name="Plane003"
          geometry={nodes.Plane003.geometry}
          material={materials["Material.006"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <mesh
          visible={false}
          name="Plane004"
          geometry={nodes.Plane004.geometry}
          material={materials["Material.006"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
        <mesh
          visible={false}
          name="Plane005"
          geometry={nodes.Plane005.geometry}
          material={materials["Material.006"]}
          position={[0.43, 11.645, -1.504]}
          scale={0.148}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/TestFBX.glb");
